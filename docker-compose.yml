version: '3'

services:
  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka-server
    restart: always
    ports:
      - "9090:9090"

    volumes:
      - type: bind
        source: eureka-server
        target: /app

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway-for-frontend/Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - machine-microservice
      - customer-microservice
      - rental-microservice
      - keycloak-web
    volumes:
      - type: bind
        source: api-gateway-for-frontend
        target: /app

  machine-microservice:
    build:
      context: .
      dockerfile: machine-microservice/Dockerfile
    container_name: machine-microservice
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - machines-database
    volumes:
      - type: bind
        source: machine-microservice
        target: /app

  customer-microservice:
    build:
      context: .
      dockerfile: customer-microservice/Dockerfile
    container_name: customer-microservice
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - customers-database
    volumes:
      - type: bind
        source: customer-microservice
        target: /app

  rental-microservice:
    build:
      context: .
      dockerfile: rental-microservice/Dockerfile
    container_name: rental-microservice
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - rental-database
      - customer-microservice
      - machine-microservice
    volumes:
      - type: bind
        source: rental-microservice
        target: /app

  keycloak-web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak-web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5535/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: 1234 

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 9000
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: -v start-dev --import-realm --http-port=9000 --hostname keycloak-web --hostname-strict-backchannel true
    volumes:
      - ./imports:/opt/keycloak/data/import
    depends_on:
      - keycloakdb
    ports:
      - 9000:9000


  machines-database:
    container_name: machines-database
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5532:5532'
    environment:
      POSTGRES_DB: machines-database
      POSTGRES_USER: machines
      POSTGRES_PASSWORD: 1234
      PGPORT: 5532
    volumes:
      - ./databases/machines-data:/var/lib/postgresql/data
      - ./database-init/machines:/docker-entrypoint-initdb.d

  customers-database:
    container_name: customers-database
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5533:5533'
    environment:
      POSTGRES_DB: customers-database
      POSTGRES_USER: customers
      POSTGRES_PASSWORD: 1234
      PGPORT: 5533
    volumes:
      - ./databases/customers-database:/var/lib/postgresql/data
      - ./database-init/customers:/docker-entrypoint-initdb.d

  rental-database:
    container_name: rental-database
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5534:5534'
    environment:
      POSTGRES_DB: rental-database
      POSTGRES_USER: rental
      POSTGRES_PASSWORD: 1234
      PGPORT: 5534
    volumes:
      - ./databases/rental-database:/var/lib/postgresql/data
      - ./database-init/rental:/docker-entrypoint-initdb.d

  keycloakdb:
    container_name: keycloakdb
    image: postgres:14.1-alpine
    restart: always
    ports:
      - '5535:5535'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      PGPORT: 5535
    volumes:
      - ./databases/keycloack-data:/var/lib/postgresql/data